<style>

    body {
        background-image: url('/images/arm.jpg');
        background-size: contain;
        background-position: center;
        background-repeat: no-repeat;
        height: 100vh;
        margin: 0;
        position: relative;
        font-family: 'Montserrat', sans-serif;
    }

    .slider-container {
        position: absolute;
        width: 200px;
        height: 20px;
        background: #ddd;
        border-radius: 15px;
        overflow: visible;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .slider {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 20px;
        height: 20px;
        background: #4caf50;
        border-radius: 50%;
        cursor: pointer;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
    }

    .slide1 { top: 710px; left: 630px; }
    .slide2 { top: 610px; left: 1040px; }
    .slide3 { top: 300px; left: 450px; }
    .slide4 { top: 80px; left: 690px; }
    .slide5 { top: 55px; left: 1110px; }
    .slide6 { top: 290px; left: 1200px; }

</style>

<body>

    <div class="slider-container slide1">
        <div class="slider" data-servo="1"></div>
    </div>
    <div class="slider-container slide2">
        <div class="slider" data-servo="2"></div>
    </div>
    <div class="slider-container slide3">
        <div class="slider" data-servo="3"></div>
    </div>
    <div class="slider-container slide4">
        <div class="slider" data-servo="4"></div>
    </div>
    <div class="slider-container slide5">
        <div class="slider" data-servo="5"></div>
    </div>
    <div class="slider-container slide6">
        <div class="slider" data-servo="6"></div>
    </div>

    <script>
        let activeSlider = null; // Track the currently selected slider

        // Select all sliders and initialize their position
        document.querySelectorAll('.slider').forEach(slider => {
            const container = slider.parentElement;
            const servoIndex = slider.getAttribute('data-servo');

            // Set the slider to the middle of the container on page load
            window.addEventListener('load', () => {
                const rect = container.getBoundingClientRect();
                slider.style.left = `${rect.width / 2}px`;
            });

            // Highlight the active slider when clicked
            slider.addEventListener('click', () => {
                activeSlider = slider;
                document.querySelectorAll('.slider').forEach(s => s.style.border = 'none');
                slider.style.border = '2px solid #000';
            });
        });

        // Listen for keydown events to control the slider
        document.addEventListener('keydown', (event) => {
            if (!activeSlider) return; // Do nothing if no slider is active

            const container = activeSlider.parentElement;
            const rect = container.getBoundingClientRect();
            let left = parseInt(activeSlider.style.left || `${rect.width / 2}px`, 10);

            if (event.key === 'ArrowLeft' || event.key === 'ArrowUp') {
                left -= 5; // Move slider left
            } else if (event.key === 'ArrowRight' || event.key === 'ArrowDown') {
                left += 5; // Move slider right
            } else {
                return; // Ignore other keys
            }

            // Ensure the slider stays within the container bounds
            const sliderRadius = 10; // Adjust for slider's radius
            const minLeft = sliderRadius;
            const maxLeft = rect.width - sliderRadius;

            if (left < minLeft) left = minLeft;
            if (left > maxLeft) left = maxLeft;

            activeSlider.style.left = `${left}px`;

            // Calculate the position as a percentage (0-100) with proper bounds normalization
            const percentage = ((left - minLeft) / (maxLeft - minLeft)) * 100;

            // Log the slider movement and the position value
            console.log(`Slider ${activeSlider.getAttribute('data-servo')} moved to position: ${percentage.toFixed(2)}%`);

            // Send the position to the server via a POST request for the correct servo
            fetch(`/servo/${activeSlider.getAttribute('data-servo')}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ position: percentage }),
            })
            .then(response => response.json())
            .then(data => {
                console.log('Server response:', data);
            })
            .catch(error => console.error('Error sending data to server:', error));
        });

        // Deselect slider when clicking outside
        document.addEventListener('click', (event) => {
            if (!event.target.classList.contains('slider')) {
                activeSlider = null;
                document.querySelectorAll('.slider').forEach(s => s.style.border = 'none');
            }
        });

    </script>

</body>
